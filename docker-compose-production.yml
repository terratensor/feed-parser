version: "3.9"
services:

  service:
    image: ${REGISTRY}/feed-parser-service:${IMAGE_TAG}
    ports:
      - "8080:8080"
    networks:
      - feed-parser-net
    volumes:
      - config:/app/config
    environment:
      CONFIG_PATH: './config/prod.yaml'
      INDEX_NOW_KEY: ${SERVICE_INDEX_NOW_KEY}
    command: './feed-parser-service'
    deploy:
      placement:
        constraints: [ node.labels.worker == worker-2 ]
      restart_policy:
        condition: on-failure

  rssfeed:
    image: ${REGISTRY}/feed-static-generator:${IMAGE_TAG}
    environment:
      MANTICORE_INDEX: 'feed'
      GENERATOR_DELAY: '300s'
    networks:
      - feed-parser-net
    volumes:
      - static:/app/static
    command: './feed-static-generator'
    deploy:
      placement:
        constraints: [ node.labels.worker == worker-2 ]
      restart_policy:
        condition: on-failure

  server:
    image: ${REGISTRY}/feed-server:${IMAGE_TAG}
    networks:
      - traefik-public
      - feed-parser-net
    volumes:
      - static:/app/static
    command: './feed-server'
    deploy:
      placement:
        constraints: [ node.labels.worker == worker-2 ]
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.http.routers.feed-srv.rule=Host(`rss.feed.svodd.ru`)
        - traefik.http.services.feed-srv.loadBalancer.server.port=8000
        - traefik.http.routers.feed-srv.middlewares=frontend-redirect,secure-headers
        - traefik.http.routers.feed-srv.entryPoints=https
        - traefik.http.routers.feed-srv.tls=true
        - traefik.http.routers.feed-srv.tls.certResolver=letsEncrypt

  kremlin-indexer:
    image: ${REGISTRY}/feed-kremlin-indexer:${IMAGE_TAG}
    networks:
      - feed-parser-net
    volumes:
      - config:/app/config
    environment:
      CONFIG_PATH: './config/kremlin/prod.yaml'
    command: './feed-kremlin-indexer'
    deploy:
      replicas: 0
      placement:
        constraints: [ node.labels.worker == worker-2 ]
      restart_policy:
        condition: none


  mil-indexer:
    image: ${REGISTRY}/feed-mil-indexer:${IMAGE_TAG}
    volumes:
      - config:/app/config
    networks:
      - feed-parser-net
    environment:
      CONFIG_PATH: './config/mil/prod.yaml'
    command: './feed-mil-indexer'
    deploy:
      replicas: 0
      placement:
        constraints: [ node.labels.worker == worker-2 ]
      restart_policy:
        condition: none

  mid-indexer:
    image: ${REGISTRY}/feed-mid-indexer:${IMAGE_TAG}
    volumes:
      - config:/app/config
    networks:
      - feed-parser-net
    environment:
      CONFIG_PATH: './config/mid/prod.yaml'
    command: './feed-mid-indexer'
    deploy:
      replicas: 0
      placement:
        constraints: [ node.labels.worker == worker-2 ]
      restart_policy:
        condition: none

volumes:
  config:
  static:

networks:
  traefik-public:
    external: true
  feed-parser-net:
    name: feed-parser-net
    external: true
